{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from \"./types\";\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => history.push(\"/login\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const loginUser = userData => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const res = axios.post('/api/auth', userData, config);\n  axios.post(\"/api/users/login\", userData).then(res => {\n    const token = res.data.token;\n    localStorage.setItem(\"jwtToken\", token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: res.data\n  };\n};\nexport const setUserLoading = () => {\n  const res = axios.get('/api/auth');\n  return {\n    type: USER_LOADED,\n    payload: res.data\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/Users/adityabhatnagar1/Desktop/socialnetworkingapp/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","config","headers","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","get","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,UADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,aARF,QASO,SATP;AAWA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC7Dd,EAAAA,KAAK,CACFe,IADH,CACQ,qBADR,EAC+BH,QAD/B,EAEGI,IAFH,CAEQC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAFf,EAGGC,KAHH,CAGSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAElB,UADC;AAEPmB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAJZ;AASD,CAVM;AAWP,OAAO,MAAMC,SAAS,GAAGb,QAAQ,IAAIE,QAAQ,IAAI;AAC/C,QAAMY,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMV,GAAG,GAAGjB,KAAK,CAACe,IAAN,CAAW,WAAX,EAAwBH,QAAxB,EAAkCc,MAAlC,CAAZ;AACA1B,EAAAA,KAAK,CACFe,IADH,CACQ,kBADR,EAC4BH,QAD5B,EAEGI,IAFH,CAEQC,GAAG,IAAI;AAAA,UACHW,KADG,GACOX,GAAG,CAACO,IADX,CACHI,KADG;AAEXC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACA3B,IAAAA,YAAY,CAAC2B,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAG7B,UAAU,CAAC0B,KAAD,CAA1B;AACAd,IAAAA,QAAQ,CAACkB,cAAc,CAACD,OAAD,CAAf,CAAR;AACD,GARH,EASGZ,KATH,CASSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAElB,UADC;AAEPmB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAVZ;AAeD,CAtBM;AAwBP,OAAO,MAAMQ,cAAc,GAAGD,OAAO,IAAI;AACvC,SAAO;AACLV,IAAAA,IAAI,EAAEd,aADD;AAELe,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFR,GAAP;AAID,CALM;AAOP,OAAO,MAAMS,cAAc,GAAG,MAAM;AAClC,QAAMhB,GAAG,GAAGjB,KAAK,CAACkC,GAAN,CAAU,WAAV,CAAZ;AACA,SAAO;AACLb,IAAAA,IAAI,EAAEf,WADD;AAELgB,IAAAA,OAAO,EAACL,GAAG,CAACO;AAFP,GAAP;AAID,CANM;AAQP,OAAO,MAAMW,UAAU,GAAG,MAAMrB,QAAQ,IAAI;AAC1Ce,EAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACAnC,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAa,EAAAA,QAAQ,CAACkB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAJM","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from \"./types\";\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) \n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\nexport const loginUser = userData => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const res = axios.post('/api/auth', userData, config);\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: res.data\n  };\n};\n\nexport const setUserLoading = () => {\n  const res = axios.get('/api/auth');\n  return {\n    type: USER_LOADED,\n    payload:res.data\n  };\n};\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};"]},"metadata":{},"sourceType":"module"}